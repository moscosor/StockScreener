{"version":3,"sources":["data/stockTickers.js","Components/StockTile.js","Components/Landing.js","Components/BasicInfoTile.js","Components/TimeFrameDropDown.js","Components/StockGraph.js","Components/Stock.js","App.js","index.js"],"names":["module","exports","StockTile","id","this","props","ticker","className","to","Component","Landing","stockTiles","stockTicker","map","BasicInfoTile","data","name","exchange","open","close","high","low","average_volume","volume","change","fifty_two_week","React","TimeFrameDropDown","defaultValue","defaultTime","onChange","handler","value","StockGraph","state","series","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","plotData","forEach","element","Number","individual","x","datetime","y","toFixed","push","setState","setPlotData","prevProps","prevState","console","log","length","tickerData","timeInterval","apiKey","process","baseUrl","Stock","handleTimeIntervalChange","e","target","loading","tickerBasicInfo","a","match","params","stockDataUrl","fetch","fetchStockData","json","concat","values","stockBasicInfoUrl","fetchStockBasicInfo","Promise","all","then","responses","res","fetchStockTimeData","require","config","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3753adc.chunk.js","sourcesContent":["const stockTickers = [\r\n    \"AAPL\",\r\n    \"MSFT\",\r\n    \"AMZN\",\r\n    \"FB\",\r\n    \"GOOGL\",\r\n    \"GOOG\",\r\n    \"TSLA\",\r\n    \"BRK.B\",\r\n    \"JPM\",\r\n    \"JNJ\",\r\n    \"V\",\r\n    \"UNH\",\r\n    \"DIS\",\r\n    \"NVDA\",\r\n    \"HD\",\r\n    \"PG\",\r\n    \"MA\",\r\n    \"BAC\",\r\n    \"PYPL\",\r\n    \"INTC\",\r\n    \"CMCSA\",\r\n    \"XOM\",\r\n    \"VZ\",\r\n    \"NFLX\",\r\n    \"ADBE\",\r\n    \"CSCO\",\r\n    \"T\",\r\n    \"ABT\",\r\n    \"CVX\",\r\n    \"KO\",\r\n    \"PFE\",\r\n    \"CRM\",\r\n    \"MRK\",\r\n    \"PEP\",\r\n    \"AVGO\",\r\n    \"ABBV\",\r\n    \"WMT\",\r\n    \"TMO\",\r\n    \"TXN\",\r\n    \"ACN\",\r\n    \"NKE\",\r\n    \"MCD\",\r\n    \"WFC\",\r\n    \"MDT\",\r\n    \"COST\",\r\n    \"QCOM\",\r\n    \"C\",\r\n    \"HON\",\r\n    \"NEE\",\r\n    \"UNP\"];\r\n\r\nmodule.exports = stockTickers;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass StockTile extends Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.ticker} className=\"stockTile\">\r\n                <Link to={`/stocks/${this.props.ticker}`}>{this.props.ticker}</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockTile;","import React, { Component } from 'react';\r\nimport stockTicker from '../data/stockTickers'\r\nimport StockTile from './StockTile'\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        const stockTiles = stockTicker.map(ticker => {\r\n            return <StockTile key={ticker} ticker={ticker} />\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <h1 className=\"title\">Stock Screener</h1>\r\n                <div className=\"stockListContainer\">\r\n                    {stockTiles}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\n\r\nclass BasicInfoTile extends React.Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <h1 className=\"littleTitle\">Stock Info</h1>\r\n                <div className=\"stockInfoTile\">\r\n                    <p>Name: {this.props.data.name}</p>\r\n                    <p>Exchange: {this.props.data.exchange}</p>\r\n                    <p>Open: ${this.props.data.open}</p>\r\n                    <p>Close: ${this.props.data.close}</p>\r\n                    <p>High: ${this.props.data.high}</p>\r\n                    <p>Low: ${this.props.data.low}</p>\r\n                    <p>Average Volume: {this.props.data.average_volume}</p>\r\n                    <p>Volume: {this.props.data.volume}</p>\r\n                    <p>Percent Change: {this.props.data.change}%</p>\r\n                    <p>52 Week High: ${this.props.data.fifty_two_week.high}</p>\r\n                    <p>52 Week Low: ${this.props.data.fifty_two_week.low}</p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicInfoTile;","import React from 'react';\r\n\r\nclass TimeFrameDropDown extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chartContainer\">\r\n                    <label className=\"labelStyle\">Time Frame: </label>\r\n                    <select name=\"timeFrame\" \r\n                            id=\"timeFrame\" \r\n                            defaultValue={this.props.defaultTime}\r\n                            onChange={this.props.handler}>\r\n                        <option value=\"1h\">1 Hour</option>\r\n                        <option value=\"1day\">1 Day</option>\r\n                        <option value=\"1week\">1 Week</option>\r\n                        <option value=\"1month\">1 Month</option>\r\n                    </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeFrameDropDown;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n\r\nclass StockGraph extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {   \r\n        series: [{\r\n          data: []\r\n        }],\r\n        options: {\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 400\r\n          },\r\n          title: {\r\n            text: `${this.props.ticker} Chart`,\r\n            align: 'left'\r\n          },\r\n          xaxis: {\r\n            type: 'datetime'\r\n          },\r\n          yaxis: {\r\n            tooltip: {\r\n              enabled: true\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    setPlotData() {\r\n        const plotData = []\r\n        this.props.data.forEach(element => {\r\n            let open = Number (element.open);\r\n            let high = Number (element.high);\r\n            let low = Number (element.low);\r\n            let close = Number (element.close);\r\n\r\n            let individual = {\r\n                x: element.datetime,\r\n                y: [open.toFixed(2), high.toFixed(2), low.toFixed(2), close.toFixed(2)]\r\n            }\r\n            plotData.push(individual);\r\n        })\r\n\r\n        this.setState({\r\n            series: [{\r\n                data: plotData\r\n            }]\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setPlotData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        console.log(\"------IN STOCK GRAPH---------\")\r\n        console.log(prevProps)\r\n        console.log(this.props)\r\n        if(prevProps.data.length < this.props.data.length){\r\n          console.log(\"//////////////////////STOCK//GRAPH/////////////////////\")\r\n          this.setState({\r\n              tickerData: []\r\n          });\r\n          console.log(\"Time Interval Changed from \" + prevState.timeInterval + \" to \" + this.state.timeInterval)\r\n          console.log(\"UPDATING\")\r\n          this.setPlotData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"candlestick\" height={350} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockGraph;","import React, { Component } from 'react';\r\nimport BasicInfoTile from './BasicInfoTile';\r\nimport TimeFrameDropDown from './TimeFrameDropDown';\r\nimport StockGraph from './StockGraph';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconst baseUrl = process.env.REACT_APP_API_BASE_ROUTE;\r\n\r\nclass Stock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            tickerBasicInfo: [],\r\n            tickerData: [],\r\n            timeInterval: \"1day\"\r\n        };\r\n    }\r\n\r\n    async fetchStockTimeData(){\r\n        const ticker = this.props.match.params.ticker;\r\n        const stockDataRoute = \"/time_series\";\r\n        const stockDataUrl = `${baseUrl}${stockDataRoute}?apikey=${apiKey}&symbol=${ticker}&interval=${this.state.timeInterval}&outputsize=250`;\r\n        \r\n        const fetchStockData = await fetch(stockDataUrl);\r\n        const data = await fetchStockData.json();\r\n        console.log(data)\r\n        this.setState({\r\n            tickerData: this.state.tickerData.concat(data.values),\r\n        })\r\n        \r\n    }\r\n\r\n   async componentDidMount() {\r\n        const ticker = this.props.match.params.ticker;\r\n        const stockDataRoute = \"/time_series\";\r\n        const stockBasicInfoRoute = \"/quote\";\r\n\r\n        const stockBasicInfoUrl = `${baseUrl}${stockBasicInfoRoute}?symbol=${ticker}&apikey=${apiKey}`;\r\n        const stockDataUrl = `${baseUrl}${stockDataRoute}?apikey=${apiKey}&symbol=${ticker}&interval=${this.state.timeInterval}&outputsize=250`;\r\n        \r\n        const fetchStockBasicInfo = fetch(stockBasicInfoUrl);\r\n        const fetchStockData = fetch(stockDataUrl);\r\n        \r\n        Promise.all([fetchStockBasicInfo, fetchStockData])\r\n            .then(responses => {\r\n                return Promise.all(responses.map(res => res.json()))\r\n            })\r\n            .then(responses => {\r\n                // const [tickerBasicInfo, tickerData] = responses;\r\n                 this.setState({ \r\n                    loading: false,\r\n                    tickerBasicInfo: this.state.tickerBasicInfo.concat(responses[0]),\r\n                    tickerData: this.state.tickerData.concat(responses[1].values)\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.timeInterval !== this.state.timeInterval){\r\n            this.setState({\r\n                tickerData: []\r\n            });\r\n            console.log(\"Time Interval Changed from \" + prevState.timeInterval + \" to \" + this.state.timeInterval)\r\n            console.log(\"UPDATING\")\r\n            this.fetchStockTimeData();\r\n        }\r\n    }\r\n\r\n    handleTimeIntervalChange = (e) => {\r\n        this.setState({\r\n            timeInterval: e.target.value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.loading ? (\r\n                    <div className=\"loading\">loading...</div>\r\n                    ) : (\r\n                        <div>\r\n                            <p className=\"title\">{this.props.match.params.ticker}</p>\r\n                            <TimeFrameDropDown defaultTime={this.state.timeInterval} handler={this.handleTimeIntervalChange}/>\r\n                            <StockGraph ticker={this.props.match.params.ticker} data={this.state.tickerData}/>\r\n                            <BasicInfoTile data={this.state.tickerBasicInfo[0]} />\r\n                        </div>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stock;","import React, { Component } from 'react';\nimport Landing from './Components/Landing';\nimport Stock from './Components/Stock';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nrequire('dotenv').config()\n\nclass App extends Component{\n  render() {\n    return(\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/stocks/:ticker\" component={Stock} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}