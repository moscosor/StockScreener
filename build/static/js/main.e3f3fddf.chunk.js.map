{"version":3,"sources":["data/stockTickers.js","Components/StockTile.js","Components/Landing.js","Components/BasicInfoTile.js","Components/TimeFrameDropDown.js","Components/StockGraph.js","Components/Strategy.js","data/descriptions.js","HelperFunctions/Indicators.js","HelperFunctions/Strategies.js","Components/StrategiesTable.js","Components/Stock.js","App.js","index.js"],"names":["module","exports","StockTile","id","this","props","ticker","className","to","Component","Landing","handleSearchToUpperCase","event","setState","searchQuery","target","value","toUpperCase","handleEnterKeyPressSearch","keyCode","preventDefault","handleSearchClick","window","location","assign","state","classes","stockTiles","stockTicker","map","TextField","placeholder","variant","textField","onKeyUp","onChange","InputProps","input","endAdornment","InputAdornment","position","IconButton","onClick","Search","icon","withStyles","borderRadius","background","color","border","margin","display","marginRight","BasicInfoTile","data","name","exchange","Number","open","toFixed","close","high","low","average_volume","volume","percent_change","fifty_two_week","React","TimeFrameDropDown","defaultValue","defaultTime","handler","StockGraph","series","options","chart","type","height","title","text","align","xaxis","yaxis","tooltip","enabled","plotData","forEach","element","individual","x","datetime","y","push","setPlotData","prevProps","prevState","length","console","log","Strategy","Tooltip","arrow","description","resultMeaning","style","result","stratDescriptions","stratResultDescriptions","sma","period","val","index","slice","vals","reduce","total","curVal","aboveMovingAverage","price","ticks","ma","reverse","i","movingAverageCrossover","periodSmall","periodLarge","smaSmall","smaLarge","prevI","StrategiesTable","shortPeriod","longPeriod","morningGap","momentumGap","rsi","tickerData","concat","indicators","calculateAllStrategies","seperateTickerData","aboveMovingAverageRes","movingAverageCrossoverRes","morningGapRes","increasePercent","decreasePercent","momentumGapRes","vol","volIncrease","priceIncrease","priceDecrease","String","apiKey","process","baseUrl","Stock","handleTimeIntervalChange","e","timeInterval","loading","tickerBasicInfo","indicator","a","match","params","stockRsiIndicatorUrl","fetch","fetchStockData","json","status","values","stockDataUrl","fetchNecessaryIndicators","stockBasicInfoUrl","fetchStockBasicInfo","Promise","all","then","responses","res","fetchStockTimeData","Button","href","startIcon","fontSize","marginLeft","require","config","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3f3fddf.chunk.js","sourcesContent":["const stockTickers = [\r\n    \"AAPL\",\r\n    \"MSFT\",\r\n    \"AMZN\",\r\n    \"FB\",\r\n    \"GOOGL\",\r\n    \"GOOG\",\r\n    \"TSLA\",\r\n    \"BRK.B\",\r\n    \"JPM\",\r\n    \"JNJ\",\r\n    \"V\",\r\n    \"UNH\",\r\n    \"DIS\",\r\n    \"NVDA\",\r\n    \"HD\",\r\n    \"PG\",\r\n    \"MA\",\r\n    \"BAC\",\r\n    \"PYPL\",\r\n    \"INTC\",\r\n    \"CMCSA\",\r\n    \"XOM\",\r\n    \"VZ\",\r\n    \"NFLX\",\r\n    \"ADBE\",\r\n    \"CSCO\",\r\n    \"T\",\r\n    \"ABT\",\r\n    \"CVX\",\r\n    \"KO\",\r\n    \"PFE\",\r\n    \"CRM\",\r\n    \"MRK\",\r\n    \"PEP\",\r\n    \"AVGO\",\r\n    \"ABBV\",\r\n    \"WMT\",\r\n    \"TMO\",\r\n    \"TXN\",\r\n    \"ACN\",\r\n    \"NKE\",\r\n    \"MCD\",\r\n    \"WFC\",\r\n    \"MDT\",\r\n    \"COST\",\r\n    \"QCOM\",\r\n    \"C\",\r\n    \"HON\",\r\n    \"NEE\",\r\n    \"UNP\"];\r\n\r\nmodule.exports = stockTickers;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass StockTile extends Component {\r\n    render() {\r\n        return (\r\n            <div id={this.props.ticker} className=\"stockTile\">\r\n                <Link to={`/stocks/${this.props.ticker}`}>{this.props.ticker}</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockTile;","import React, { Component } from 'react';\r\nimport {TextField, InputAdornment, IconButton, withStyles} from '@material-ui/core';\r\nimport {Search} from '@material-ui/icons';\r\nimport stockTicker from '../data/stockTickers';\r\nimport StockTile from './StockTile';\r\n\r\n\r\nconst styles = {\r\n    input: {\r\n        // border: \"1px solid white\",\r\n        borderRadius: \"5px\",\r\n        background: \"black\",\r\n        color: \"white\"\r\n    },\r\n    textField: {\r\n        border: \"1px solid white\",\r\n        borderRadius: \"5px\",\r\n        background: \"black\",\r\n        margin: \"40px auto\",\r\n        display: 'table'\r\n    },\r\n    icon: {\r\n        color: 'white',\r\n        marginRight: \"-25px\"\r\n    }\r\n}\r\n\r\nclass Landing extends Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            searchQuery: \"\"\r\n        }\r\n    }\r\n\r\n    handleSearchToUpperCase = (event) => {\r\n        this.setState({\r\n            searchQuery: (event.target.value).toUpperCase()\r\n        })\r\n    }\r\n\r\n    handleEnterKeyPressSearch = (event) => {\r\n        if(event.keyCode === 13){\r\n            event.preventDefault();\r\n            this.handleSearchClick();\r\n        }\r\n    }\r\n\r\n    handleSearchClick = () => {\r\n        window.location.assign(`/stocks/${this.state.searchQuery}`)\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const stockTiles = stockTicker.map(ticker => {\r\n            return <StockTile key={ticker} ticker={ticker} />\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <h1 className=\"title\">Stock Screener</h1>\r\n                <div className=\"questionContainer\">\r\n                    <p className=\"questionText\">Search For Your Favorite Stock</p>\r\n                </div>\r\n                <TextField \r\n                    placeholder=\"Search Ticker\"\r\n                    variant=\"outlined\"\r\n                    value={this.state.searchQuery}\r\n                    className={classes.textField}\r\n                    onKeyUp={this.handleEnterKeyPressSearch}\r\n                    onChange={this.handleSearchToUpperCase}\r\n                    InputProps={{\r\n                        className: classes.input,\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <IconButton onClick={this.handleSearchClick} >\r\n                                    <Search className={classes.icon} />\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n                <div className=\"questionContainer\">\r\n                    <p className=\"questionText\">...or browse our colletion of the top 50 most popular stocks below.</p>\r\n                </div>\r\n                <div className=\"stockListContainer\">\r\n                    {stockTiles}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Landing);","import React from 'react';\r\n\r\nclass BasicInfoTile extends React.Component {\r\n    render(){\r\n        return (\r\n            <>\r\n                <h1 className=\"littleTitle\">Stock Info</h1>\r\n                <div className=\"stockInfoTile\">\r\n                    <p>Name: {this.props.data.name}</p>\r\n                    <p>Exchange: {this.props.data.exchange}</p>\r\n                    <p>Open: ${Number (this.props.data.open).toFixed(2)}</p>\r\n                    <p>Close: ${Number (this.props.data.close).toFixed(2)}</p>\r\n                    <p>High: ${Number (this.props.data.high).toFixed(2)}</p>\r\n                    <p>Low: ${Number (this.props.data.low).toFixed(2)}</p>\r\n                    <p>Average Volume: {this.props.data.average_volume}</p>\r\n                    <p>Volume: {this.props.data.volume}</p>\r\n                    <p>Percent Change: {Number (this.props.data.percent_change).toFixed(2)}%</p>\r\n                    <p>52 Week High: ${Number (this.props.data.fifty_two_week.high).toFixed(2)}</p>\r\n                    <p>52 Week Low: ${Number (this.props.data.fifty_two_week.low).toFixed(2)}</p>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BasicInfoTile;","import React from 'react';\r\n\r\nclass TimeFrameDropDown extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chartContainer\">\r\n                    <label className=\"labelStyle\">Time Frame: </label>\r\n                    <select name=\"timeFrame\" \r\n                            id=\"timeFrame\" \r\n                            defaultValue={this.props.defaultTime}\r\n                            onChange={this.props.handler}>\r\n                        <option value=\"1h\">1 Hour</option>\r\n                        <option value=\"1day\">1 Day</option>\r\n                        <option value=\"1week\">1 Week</option>\r\n                        <option value=\"1month\">1 Month</option>\r\n                    </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeFrameDropDown;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n\r\nclass StockGraph extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {   \r\n        series: [{\r\n          data: []\r\n        }],\r\n        options: {\r\n          chart: {\r\n            type: 'candlestick',\r\n            height: 400\r\n          },\r\n          title: {\r\n            text: `${this.props.ticker} Chart`,\r\n            align: 'left'\r\n          },\r\n          xaxis: {\r\n            type: 'datetime'\r\n          },\r\n          yaxis: {\r\n            tooltip: {\r\n              enabled: true\r\n            }\r\n          }\r\n        }\r\n      };\r\n    }\r\n\r\n    setPlotData() {\r\n        const plotData = []\r\n        this.props.data.forEach(element => {\r\n            let open = Number (element.open);\r\n            let high = Number (element.high);\r\n            let low = Number (element.low);\r\n            let close = Number (element.close);\r\n\r\n            let individual = {\r\n                x: element.datetime,\r\n                y: [open.toFixed(2), high.toFixed(2), low.toFixed(2), close.toFixed(2)]\r\n            }\r\n            plotData.push(individual);\r\n        })\r\n\r\n        this.setState({\r\n            series: [{\r\n                data: plotData\r\n            }]\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setPlotData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.data.length < this.props.data.length){\r\n            // this.setState({\r\n            //   tickerData: []\r\n            // });\r\n            this.setPlotData();\r\n        }\r\n        console.log(\"-------------UPDATING GRAPH---------\")\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={this.state.options} series={this.state.series} type=\"candlestick\" height={350} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StockGraph;","import React from 'react';\r\nimport {Tooltip} from '@material-ui/core';\r\n\r\nclass Strategy extends React.Component {\r\n    \r\n    render() {\r\n\r\n        return(\r\n            <>\r\n                <div className=\"strategyRow\">\r\n                    <Tooltip arrow title={\r\n                        <div className=\"tooltipTextContainer\">\r\n                            <p className=\"tooltipTextTitle\">{this.props.name}:</p>\r\n                            <p>{this.props.description}</p>\r\n                        </div>}>\r\n                            <p className=\"tableCell\">{this.props.name}</p>\r\n                    </Tooltip>\r\n                    <Tooltip arrow title={\r\n                        <div className=\"tooltipTextContainer\">\r\n                            <p className=\"tooltipTextTitle\">What Does This Mean For Me?</p>\r\n                            <p>{this.props.resultMeaning}</p>\r\n                        </div>}>\r\n                            <p style={this.props.style} className=\"tableCell\">{this.props.result}</p>\r\n                    </Tooltip>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Strategy;","export const stratDescriptions = {\r\n    morningGapScan: \"The Morning Gap Strategy  takes advantage of inefficiencies in the way the price of an equity is calculated at market open. This scan checks if there is a gap between 2% and 10% from the previous market close to the market open.\",\r\n    rsiScan: \"The RSI Strategy is used to signal when an equity is overbought or oversold.\",\r\n    momentumGapScan: \"The Momentum Gap Strategy is used to indicate a potential trend change. When at a breakout point a gap indicates the start of a strong trend. When it occurs in the middle of a trend it is a strong sign of a reversal. The strategy requires a gap between any two candles that has significantly more volume and is a gap that is greater than 8%.\",\r\n    aboveMovingAverageScan: \"The Above Moving Average Strategy if the price is above the moving average and how many bars ago the price crossed over the moving average. This helps indicate whether or not the equity is in an upward trend.\",\r\n    movingAverageScan: \"The Moving Average Crossover Strategy compares the 13 period moving average to the 50 period moving average. A buy signal can be seen when the 13 period Moving Average crosses above the 50 period moving average in a trending market.\"\r\n};\r\nexport const stratResultDescriptions = {\r\n    morningGapRes: \"Note this strategy shouldn’t be used when there has been news, earnings, or other influences on the opening price. Returns the % change between the previous day's close and this morning's open. If red, there was a gap down and a long position should be taken. If green, there was a gap up and a short position should be taken. If false then a morning gap did not occur\",\r\n    momentumGapRes: \"Returns the % change from the previous candle close and current candles open. If there was a negative percent change then there was a gap down, if theres a positive percent change there was a gap up. If false then a momentum gap did not occur\",\r\n    aboveMovingAverageRes: \"Returns the number of ticks the price has been above the moving average. Tick = Current Time Interval\",\r\n    movingAverageRes: \"If strategy is not applicable then returns N/A in orange. If the moving average crossover accrued more than 9 bars ago then it will indicate it is 'Too Irrelevant'. If a moving average is applicable then it returns the number of ticks the small moving average has been above the large moving average and a long position is recommended.\",\r\n    rsiRes: \"If RSI is above 70 you should take a short position. If RSI is below 30 then you should take a long position.\"\r\n}\r\n","//SMA\r\n// close = close array\r\n// period = short(15) or long(50)\r\nexport function sma(close, period){\r\n    var sma = close.map((val, index) => {\r\n        if(index < period - 1) {\r\n            val = null\r\n            return val;\r\n        }\r\n        else {\r\n            val = close.slice((index + 1) - period ,(index + 1));\r\n            val = avg(val)\r\n            return val;\r\n        }\r\n    },0)\r\n    return sma;\r\n};\r\n\r\n\r\n//Average\r\n// vals = array of nums\r\nexport function avg(vals){\r\n    var sum = vals.reduce((total, curVal) => {return total + curVal},0);\r\n    var avg = sum/vals.length;\r\n    return avg;\r\n};\r\n\r\n// //RSI\r\n// export function rsi(close){\r\n//     var gain = [];\r\n//     var loss= [];\r\n//     close = close.map((val, index, arr) =>{\r\n//         val = arr.slice(index-14, index);\r\n//         return val;\r\n//     },0)\r\n//         for(var i=0; i<open.length; i++) {\r\n//             if(close[i] > close[i - 1]) {\r\n//             gain += open[i] - close[i-1];\r\n//             }\r\n//             else if(close[i] < close[i - 1]) {\r\n//             loss += close[i] - open[i-1];\r\n//             }\r\n//         }\r\n//     gain = avg(gain);\r\n//     loss = avg(loss);\r\n//     var rsi = 100 - (100/1+(gain/loss)); \r\n//     return rsi;   \r\n// };\r\n    ","import {sma} from './Indicators'; \r\n\r\n/*Morning Gap Strategy\r\nTakes the last open and close and finds the percent change.\r\nif the percent chage is greater than 2% and smaller than 10%\r\nit returns the percent change\r\n*/ \r\nexport function morningGap(close, open){\r\n    close = close[1];\r\n    open = open[0];\r\n    if(open > close){\r\n        var increase = open-close;\r\n        var increasePercent = (increase/close)*100;\r\n        if (increasePercent >= 2 && increasePercent <= 10){\r\n            return +increasePercent.toFixed(2);\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    if(open < close){\r\n        var decrease = close - open;\r\n        var decreasePercent = (decrease/close)*100;\r\n        if (decreasePercent >= 2 && decreasePercent <= 10){\r\n            return -decreasePercent.toFixed(2);\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/*Momentum gap\r\nTakes last open and close and close and finds percent change\r\nFinds percent change in last two volume\r\nIf price change is greater than 5% and volume is greater than 50%\r\nthen return price change\r\n*/\r\nexport function momentumGap(close, open, vol){\r\n    close = close[1];\r\n    open = open[0];\r\n    var volIncrease;\r\n    vol = vol.slice(0, 2);\r\n\r\n    // 16704229,  24200\r\n    \r\n    if(open > close){\r\n        var priceIncrease = open-close;\r\n        priceIncrease = (priceIncrease/close)*100;\r\n        volIncrease = vol[0] - vol[1];\r\n        volIncrease = (volIncrease/vol[0])*100;\r\n        if (priceIncrease >= 8 && volIncrease > 50){\r\n            return +priceIncrease.toFixed(2);\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n    else if(open < close){\r\n        var priceDecrease = open-close;\r\n        priceDecrease = (priceDecrease/close)*100;\r\n        volIncrease = vol[0] - vol[1];\r\n        volIncrease = (volIncrease/vol[0])*100;;\r\n        if (priceDecrease >= 8 && volIncrease > 50){\r\n            return -priceDecrease.toFixed(2);\r\n        }\r\n        else {\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*Moving Average Scan\r\nCheck if price is above a given SMA (could use 20, 50, 13, etc)\r\n*/\r\n// price = current stock price array\r\n// period = short(20) or long(50)\r\n\r\n// true - 3 diff colors \r\n//      Revelenance Strength:\r\n//      green - 1-3 periods back\r\n//      yellow - 3-7 periods back\r\n//      red - 7-15 periods back\r\nexport function aboveMovingAverage(price, period){\r\n    // let priceRev = price.reverse();  // old -> curr\r\n    price = price.reverse();\r\n    let ticks = 0;\r\n    var ma = sma(price, period);\r\n    for(let i = price.length - 1; i >= 0; i--){\r\n        \r\n        if(price[i] > ma[i]){\r\n            ticks++;\r\n        }\r\n        else{\r\n            if(ticks < 1){\r\n                return [\"N/A\", price[i + 1], ma[i + 1]];\r\n            } else{\r\n                return [ticks, price[i + 1], ma[i + 1]];\r\n            }\r\n        }\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\n\r\n/*Bullish moving Average Crossover scan\r\nChecks to see if a shorter period moving average has recently crossed over a longer period moving average\r\nExample: 13 period moving average now above 50 period indicating reversal\r\n*/\r\n\r\n// price = close price array\r\n// periodSmall = small #\r\n// periodLarge = big #\r\n\r\nexport function movingAverageCrossover(price, periodSmall, periodLarge){\r\n    //price = price.reverse();  // old -> curr\r\n    var smaSmall = sma(price, periodSmall);\r\n    var smaLarge = sma(price, periodLarge);\r\n    let ticks = 0;\r\n    let prevI = smaSmall.length - 1;\r\n    \r\n    for(let i = smaSmall.length - 1; i >= 0; i--){\r\n        if(smaLarge[smaLarge.length - 1] > smaSmall[smaLarge.length - 1]){\r\n            return \"N/A\";\r\n        }\r\n        if(smaSmall[i] > smaLarge[i] && prevI === i){\r\n            prevI--;\r\n            ticks++;\r\n        }\r\n    }\r\n    if(ticks > 0 && ticks <= 9){\r\n        return ticks;\r\n    }\r\n    else{\r\n        return \"Too Irrelevant\"\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport Strategy from './Strategy';\r\nimport {stratDescriptions, stratResultDescriptions} from '../data/descriptions'\r\nimport {morningGap, momentumGap, aboveMovingAverage, movingAverageCrossover} from '../HelperFunctions/Strategies';\r\n\r\nclass StrategiesTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: [],\r\n            close: [],\r\n            volume: [],\r\n            shortPeriod: 13,\r\n            longPeriod: 50,\r\n            morningGap: null,\r\n            momentumGap: null,\r\n            aboveMovingAverage: null,\r\n            movingAverageCrossover: null,\r\n            rsi: null\r\n        }\r\n    }\r\n\r\n    seperateTickerData() {\r\n        const tickerData = this.props.data;\r\n        let open = [];\r\n        let close = [];\r\n        let volume = [];\r\n\r\n        tickerData.forEach((element) => {\r\n            open.push(Number (element.open));\r\n            close.push(Number (element.close));\r\n            volume.push(Number (element.volume));\r\n        });\r\n\r\n        this.setState({\r\n            open: this.state.open.concat(open),\r\n            close: this.state.close.concat(close),\r\n            volume: this.state.volume.concat(volume),\r\n            rsi: this.props.indicators.rsi === null ? \"N/A\" : this.props.indicators.rsi\r\n        }, () => {\r\n            this.calculateAllStrategies();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.seperateTickerData();\r\n    }\r\n\r\n    calculateAllNonDailyStrategies() {\r\n        let aboveMovingAverageRes = aboveMovingAverage(this.state.close, this.state.shortPeriod);\r\n        let movingAverageCrossoverRes = movingAverageCrossover(this.state.close, this.state.shortPeriod, this.state.longPeriod);\r\n        \r\n        this.setState({\r\n                aboveMovingAverage: aboveMovingAverageRes[0],\r\n                movingAverageCrossover: movingAverageCrossoverRes,\r\n                rsi: this.props.indicators.rsi\r\n            });\r\n    }\r\n\r\n    calculateAllStrategies() {\r\n        let morningGapRes = morningGap(this.state.close, this.state.open);\r\n        let momentumGapRes = momentumGap(this.state.close, this.state.open, this.state.volume);\r\n        let aboveMovingAverageRes = aboveMovingAverage(this.state.close, this.state.shortPeriod);\r\n        let movingAverageCrossoverRes = movingAverageCrossover(this.state.close, this.state.shortPeriod, this.state.longPeriod);\r\n        \r\n        // console.log(morningGapRes)\r\n        // console.log(momentumGapRes)\r\n        // console.log(aboveMovingAverageRes)\r\n        // console.log(movingAverageCrossoverRes)\r\n        \r\n        this.setState({\r\n                morningGap: morningGapRes,\r\n                momentumGap: momentumGapRes,\r\n                aboveMovingAverage: aboveMovingAverageRes[0],\r\n                movingAverageCrossover: movingAverageCrossoverRes,\r\n                rsi: this.props.indicators.rsi\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevProps.data.length < this.props.data.length){\r\n            console.log(this.state.tickerData)\r\n            this.setState({\r\n                open: [],\r\n                close: [],\r\n                volume: [],\r\n                tickerData: [],\r\n                aboveMovingAverage: null,\r\n                movingAverageCrossover: null,\r\n                rsi: null\r\n            }, () => {\r\n                this.seperateTickerData();\r\n            });\r\n            console.log(\"-------------UPDATING STRATEGIES------------\")\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    render() {\r\n        return(\r\n            <>\r\n                <h1 className=\"littleTitle\">Stock Strategies</h1>\r\n                <div className=\"strategyTable\">\r\n                <div className=\"strategyTitle\">\r\n                    <p className=\"tableCell littleTitle\">Strategy Name</p>\r\n                    <p className=\"tableCell littleTitle\">Result</p>\r\n                </div>\r\n                    <Strategy \r\n                        resultMeaning={stratResultDescriptions.morningGapRes} \r\n                        description={stratDescriptions.morningGapScan} \r\n                        style={{ color: Number (this.state.morningGap) > 1 ? 'green': 'red'}}  \r\n                        name={\"Morning Gap\"} \r\n                        result={typeof this.state.morningGap == 'boolean' ? `${this.state.morningGap}` : `${this.state.morningGap}%`}/>\r\n                    <Strategy \r\n                        resultMeaning={stratResultDescriptions.momentumGapRes} \r\n                        description={stratDescriptions.momentumGapScan} \r\n                        style={{ color: this.state.momentumGap > 1 ? 'green': 'red'}}  \r\n                        name={\"Momentum Gap\"} \r\n                        result={typeof this.state.momentumGap == 'boolean' ? `${this.state.momentumGap}` : `${this.state.momentumGap}%`}/>\r\n                    <Strategy \r\n                        resultMeaning={stratResultDescriptions.aboveMovingAverageRes} \r\n                        description={stratDescriptions.aboveMovingAverageScan} \r\n                        name={\"Above Moving Average\"} \r\n                        result={typeof this.state.aboveMovingAverage == 'number' ? `${this.state.aboveMovingAverage} ticks ago` : `${this.state.aboveMovingAverage}`}/>\r\n                    <Strategy \r\n                        resultMeaning={stratResultDescriptions.movingAverageRes} \r\n                        description={stratDescriptions.movingAverageScan} \r\n                        style={{ color: typeof this.state.movingAverageCrossover != 'number' ? 'orange': 'green'}} \r\n                        name={\"Moving Average Crossover\"} \r\n                        result={typeof this.state.movingAverageCrossover == 'number' ? `${this.state.movingAverageCrossover} ticks ago` : `${this.state.movingAverageCrossover}`}/>\r\n                    <Strategy \r\n                        resultMeaning={stratResultDescriptions.rsiRes} \r\n                        style={{color: Number (this.state.rsi) > 70 ? 'red': Number (this.state.rsi) < 30 ? 'green' : '#BA55D3'}}\r\n                        description={stratDescriptions.rsiScan} \r\n                        name={\"Relative Strength Index\"} \r\n                        result={String (this.state.rsi)}/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StrategiesTable;","import React, { Component } from 'react';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\r\nimport {Tooltip} from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button'\r\nimport BasicInfoTile from './BasicInfoTile';\r\nimport TimeFrameDropDown from './TimeFrameDropDown';\r\nimport StockGraph from './StockGraph';\r\nimport StrategiesTable from './StrategiesTable'\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\nconst baseUrl = process.env.REACT_APP_API_BASE_ROUTE;\r\n\r\nclass Stock extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            loading: true,\r\n            tickerBasicInfo: [],\r\n            tickerData: [],\r\n            timeInterval: \"1day\",\r\n            indicator: null\r\n        };\r\n    }\r\n\r\n    async fetchNecessaryIndicators(){\r\n        const ticker = this.props.match.params.ticker;\r\n        const stockRsiRoute = \"/rsi\";\r\n        const stockRsiIndicatorUrl = `${baseUrl}${stockRsiRoute}?apikey=${apiKey}&symbol=${ticker}&interval=${this.state.timeInterval}`;\r\n        \r\n        const fetchStockData = await fetch(stockRsiIndicatorUrl);\r\n        let data = await fetchStockData.json();\r\n        if(data.status === \"error\" || data.values[0].rsi === null){\r\n            data = \"Not Enough Information\";\r\n        } else{\r\n            data = data.values[0].rsi\r\n        }\r\n\r\n        this.setState({\r\n            indicator: {\r\n                rsi: data\r\n            }\r\n        })\r\n    }\r\n\r\n    async fetchStockTimeData(){\r\n        const ticker = this.props.match.params.ticker;\r\n        const stockDataRoute = \"/time_series\";\r\n        const stockDataUrl = `${baseUrl}${stockDataRoute}?apikey=${apiKey}&symbol=${ticker}&interval=${this.state.timeInterval}&outputsize=250`;\r\n        \r\n        const fetchStockData = await fetch(stockDataUrl);\r\n        const data = await fetchStockData.json();\r\n\r\n        this.setState({\r\n            tickerData: this.state.tickerData.concat(data.values),\r\n        }, () => {\r\n            this.fetchNecessaryIndicators();\r\n        })\r\n        \r\n    }\r\n\r\n   async componentDidMount() {\r\n        const ticker = this.props.match.params.ticker;\r\n        const stockDataRoute = \"/time_series\";\r\n        const stockBasicInfoRoute = \"/quote\";\r\n\r\n        const stockBasicInfoUrl = `${baseUrl}${stockBasicInfoRoute}?symbol=${ticker}&apikey=${apiKey}`;\r\n        const stockDataUrl = `${baseUrl}${stockDataRoute}?apikey=${apiKey}&symbol=${ticker}&interval=${this.state.timeInterval}&outputsize=250`;\r\n        \r\n        const fetchStockBasicInfo = fetch(stockBasicInfoUrl);\r\n        const fetchStockData = fetch(stockDataUrl);\r\n        \r\n        this.fetchNecessaryIndicators();\r\n        Promise.all([fetchStockBasicInfo, fetchStockData])\r\n            .then(responses => {\r\n                return Promise.all(responses.map(res => res.json()))\r\n            })\r\n            .then(responses => {\r\n                // const [tickerBasicInfo, tickerData] = responses;\r\n                 this.setState({ \r\n                    loading: false,\r\n                    tickerBasicInfo: this.state.tickerBasicInfo.concat(responses[0]),\r\n                    tickerData: this.state.tickerData.concat(responses[1].values)\r\n                });\r\n            });\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(prevState.timeInterval !== this.state.timeInterval){\r\n            this.setState({\r\n                tickerData: []\r\n            });\r\n\r\n            this.fetchStockTimeData();\r\n        }\r\n    }\r\n\r\n    handleTimeIntervalChange = (e) => {\r\n        this.setState({\r\n            timeInterval: e.target.value\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.loading ? (\r\n                    <div className=\"loading\">loading...</div>\r\n                    ) : (\r\n                        <div>\r\n                            <Tooltip arrow title=\"Go Back\">\r\n                                <Button href=\"/\" startIcon={<ArrowBackIcon style={{color:\"white\", fontSize:\"2.5rem\", marginLeft:\"10px\"}}/>}/>\r\n                            </Tooltip>\r\n                            <p className=\"title\">{this.props.match.params.ticker}</p>\r\n                            <TimeFrameDropDown defaultTime={this.state.timeInterval} handler={this.handleTimeIntervalChange}/>\r\n                            <StockGraph ticker={this.props.match.params.ticker} data={this.state.tickerData}/>\r\n                            <BasicInfoTile data={this.state.tickerBasicInfo[0]} />\r\n                            <StrategiesTable indicators={this.state.indicator} data={this.state.tickerData}/>\r\n                        </div>\r\n                    )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Stock;","import React, { Component } from 'react';\nimport Landing from './Components/Landing';\nimport Stock from './Components/Stock';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nrequire('dotenv').config()\n\nclass App extends Component{\n  render() {\n    return(\n      <div>\n        <Router>\n          <Switch>\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/stocks/:ticker\" component={Stock} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render( <App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}